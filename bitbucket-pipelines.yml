image:
  name: bitnami/laravel:11.3.3 # https://bitnami.com/stack/laravel w- 9.5.2 - 10.3.3
  run-as-user: 1000

definitions:
  caches:
    phpstan: build/phpstan
  setup-script: &setup-script |
    composer install --prefer-dist --no-interaction
    cp .env.testing .env
    php artisan key:generate
    php artisan about --only=environment
  steps:
    - step: &common-step
        caches:
          - composer
    - step: &check-format
        <<: *common-step
        name: Check Format
        script:
          - *setup-script
          - composer format-dry-run
        condition:
          changesets:
            includePaths:
              - "**.php"
              - "pint.json"
    - step: &analyse
        <<: *common-step
        name: Analyse
        script:
          - *setup-script
          - composer analyse-no-memory-limit
        caches:
          - composer
          - phpstan
        condition:
          changesets:
            includePaths:
              - "**.php"
              - "phpstan.neon"
              - "composer.json"
              - "bitbucket-pipelines.yml"
              - "phpstan-stubs/"
    - step: &test
        <<: *common-step
        name: Test
        size: 4x
        script:
          - *setup-script
          - composer test-ci
    - step: &docker-push-to-ecr
        name: Build & Push Docker Image to ECR
        image: amazon/aws-cli:2.0.0
        services:
          - docker
        script:
          - export TAG_ENV=""
          - |
            case "$BITBUCKET_BRANCH" in
              "staging") TAG_ENV="staging";;
              "ecommerce-branch") TAG_ENV="ecommerce";;
              "master") TAG_ENV="prod";;
              *) TAG_ENV="dev";;
              esac
          - export IMAGE_TAG="$TAG_ENV-$BITBUCKET_COMMIT"
          - export IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/hasp"

          # AWS and ECR Login
          - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          - aws configure set default.region $AWS_DEFAULT_REGION
          - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $IMAGE_URI

          # Docker build and push
          - docker build -t hasp .
          - docker tag hasp:latest $IMAGE_URI:$IMAGE_TAG
          - docker push $IMAGE_URI:$IMAGE_TAG

          # Optionally also push :latest for production
          - |
            if [ "$BITBUCKET_BRANCH" = "master" ]; then
              docker tag hasp:latest $IMAGE_URI:latest
              docker push $IMAGE_URI:latest
            fi

pipelines:
  branches:
    develop:
      - parallel:
          - step: *check-format
          - step: *analyse
          - step: *test
    staging:
      - parallel:
          - step: *check-format
          - step: *analyse
          - step: *test
      - step:
          <<: *common-step
          name: Deploy to Staging
          deployment: staging
          services:
            - docker
          script:
            - *setup-script
            - composer require laravel/vapor-cli
            - ./vendor/bin/vapor deploy staging --commit="$BITBUCKET_COMMIT"
    master:
      - parallel:
          - step: *check-format
          - step: *analyse
          - step: *test
      - step:
          <<: *common-step
          name: Deploy to Production
          deployment: production
          services:
            - docker
          trigger: manual
          script:
            - *setup-script
            - composer require laravel/vapor-cli
            - ./vendor/bin/vapor deploy production --commit="$BITBUCKET_COMMIT"
    ecommerce-branch:
      - parallel:
          - step: *check-format
          - step: *analyse
          - step: *test
          - step: *docker-push-to-ecr
          - step:
              <<: *common-step
              name: Deploy to Ecommerce Branch
              deployment: ecommerce
              services:
                - docker
              script:
                - *setup-script
                - composer global require laravel/vapor-cli --update-with-dependencies
                - ./vendor/bin/vapor deploy ecommerce-branch --commit="$BITBUCKET_COMMIT"
          
  pull-requests:
    "**":
      - parallel:
          - step: *check-format
          - step: *analyse
          - step: *test
